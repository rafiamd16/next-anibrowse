generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String       @id @default(cuid())
  name           String?
  email          String       @unique
  emailVerified  DateTime?
  hashedPassword String?
  image          String?
  role           String       @default("user")
  accounts       Account[]
  collections    Collection[] @relation("UserCollections")
  comments       Comment[]    @relation("UserComments")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Collection {
  id         String  @id @default(cuid())
  mal_id     Int
  userId     String
  animeTitle String?
  animeImage String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation("UserCollections", fields: [userId], references: [id], onDelete: Cascade)

  @@unique([mal_id, userId])
  @@map("collections")
}

model Comment {
  id         String  @id @default(cuid())
  mal_id     Int
  userId     String
  animeTitle String?
  comment    String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation("UserComments", fields: [userId], references: [id], onDelete: Cascade)

  @@map("comments")
}
